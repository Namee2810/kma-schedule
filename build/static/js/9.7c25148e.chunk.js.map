{"version":3,"sources":["api/axiosClient.js","api/userAPI.js","components/LoginForm/index.jsx"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","data","error","require","default","userAPI","login","post","layout","labelCol","lg","md","sm","wrapperCol","rememberLayout","offset","span","xs","buttonLayout","LoginForm","useState","logging","setLogging","history","useHistory","onFinish","values","username","password","then","res","status","notification","message","setTimeout","success","token","localStorage","setItem","push","catch","err","console","log","className","id","onClick","document","getElementById","style","transform","CloseOutlined","labelAlign","initialValues","remember","size","Item","label","name","rules","required","prefix","UserOutlined","Password","LockOutlined","valuePropName","type","width","LoadingOutlined","fontSize"],"mappings":"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","file":"static/js/9.7c25148e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    'X-Requested-With': 'XMLHttpRequest',\r\n    'Accept': 'application/json'\r\n  },\r\n  paramsSerializer: params => queryString.stringify(params)\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  // if (localStorage.getItem(\"token\"))\r\n  // config.headers.authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n  if (response && response.data) {\r\n    return response.data;\r\n  }\r\n\r\n  return response;\r\n}, (error) => {\r\n  throw error;\r\n});\r\n\r\nexport default axiosClient;","const { default: axiosClient } = require(\"./axiosClient\");\r\n\r\nconst userAPI = {\r\n  login: (params) => {\r\n    const url = \"/login\";\r\n    return axiosClient.post(url, params);\r\n  },\r\n};\r\n\r\nexport default userAPI;","import { CloseOutlined, LoadingOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Checkbox, Form, Input, notification } from \"antd\";\r\nimport userAPI from \"api/userAPI\";\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./style.scss\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    lg: 7,\r\n    md: 6,\r\n    sm: 6,\r\n  },\r\n  wrapperCol: {\r\n    lg: 12,\r\n    md: 14,\r\n    sm: 14,\r\n  },\r\n};\r\nconst rememberLayout = {\r\n  wrapperCol: {\r\n    lg: { offset: 7, span: 12 },\r\n    md: { offset: 6, span: 12 },\r\n    sm: { offset: 6, span: 12 },\r\n    xs: { offset: 8, span: 12 },\r\n  },\r\n};\r\nconst buttonLayout = {\r\n  wrapperCol: {\r\n    lg: { offset: 6, span: 12 },\r\n    md: { offset: 6, span: 12 },\r\n    sm: { offset: 7, span: 12 },\r\n    xs: { offset: 0, span: 12 },\r\n  },\r\n}\r\n\r\nfunction LoginForm() {\r\n  const [logging, setLogging] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const onFinish = async (values) => {\r\n    if (!logging) {\r\n      setLogging(true);\r\n      await userAPI.login({\r\n        username: values.username,\r\n        password: values.password\r\n      })\r\n        .then(res => {\r\n          switch (res.status) {\r\n            case 400: {\r\n              notification.error({\r\n                message: \"Mã sinh viên hoặc mật khẩu không chính xác 😢\",\r\n              });\r\n              setTimeout(() => {\r\n                setLogging(false);\r\n              }, 500);\r\n              break\r\n            }\r\n            case 200: {\r\n              notification.success({\r\n                message: \"Đăng nhập thành công 🎉\",\r\n              });\r\n              if (res.token) localStorage.setItem(\"token\", res.token);\r\n              history.push(\"/dashboard\");\r\n              break;\r\n            }\r\n            default: {\r\n              notification.error({\r\n                message: \"Đã xảy ra lỗi, vui lòng thử lại sau 😢\",\r\n              });\r\n              setTimeout(() => {\r\n                setLogging(false);\r\n              }, 500);\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          notification.error({\r\n            message: \"Đã xảy ra lỗi, vui lòng thử lại sau 😢 !\",\r\n          });\r\n          console.log(err)\r\n          setTimeout(() => {\r\n            setLogging(false);\r\n          }, 500);\r\n        });\r\n    }\r\n  };\r\n  const handleCloseLoginForm = () => {\r\n    document.getElementById(\"LoginForm\").style.transform = \"translateY(0)\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"LoginForm\" id=\"LoginForm\">\r\n      <div className=\"LoginForm__close\" onClick={handleCloseLoginForm}><CloseOutlined /></div>\r\n      <Form className=\"LoginForm__form\"\r\n        labelAlign=\"right\"\r\n        initialValues={{ remember: false }}\r\n        onFinish={onFinish}\r\n        {...layout}\r\n        size=\"large\"\r\n      >\r\n        <Form.Item\r\n          label=\"Mã sinh viên\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Hãy nhập mã sinh viên!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Mật khẩu\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Hãy nhập mật khẩu!' }]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...rememberLayout}\r\n          name=\"remember\" valuePropName=\"checked\"\r\n        >\r\n          <Checkbox>Duy trì đăng nhập</Checkbox>\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...buttonLayout}\r\n        >\r\n          <button type=\"submit\" className=\"button button__animation\" style={{ width: \"192px\" }}>\r\n            {logging ? <LoadingOutlined style={{ fontSize: \"24px\" }} /> : \"Đăng nhập\"}\r\n          </button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"],"sourceRoot":""}